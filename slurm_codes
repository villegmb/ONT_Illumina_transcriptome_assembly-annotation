Sbatch files
Links
/ibex/tmp/c2078/Heat_stress_analysis/scripts

Flair ______________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J flair_assembly_2
#SBATCH -o /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/flair_assembly_2.%J.out
#SBATCH -e /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/flair_assembly_2.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

#flair align -r <genome_annotation.gtf> -b <input_bam_file1> <input_bam_file2> ... -o <output_directory>
conda activate epitranscriptomics
flair align -r /ibex/tmp/c2078/Heat_stress_analysis/xpore/data/A57.augustus.hints.gtf -b /ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_25rep1/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
/ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_25rep2/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
/ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_25rep3/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
/ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_34rep1/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
/ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_34rep2/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
/ibex/scratch/projects/c2078/Heat_stress_analysis/bam_files/bam_34rep3/FULL_BAM_aligned_reads_FULL_genome_mapont.bam
-o /ibex/scratch/projects/c2078/transcriptome_assembly/flair_output
illumina_assembly.sam

Flair 2 ______________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J flair_assembly_2
#SBATCH -o /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/flair_assembly_2.%J.out
#SBATCH -e /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/flair_assembly_2.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

conda activate epitranscriptomics

flair align -g /ibex/tmp/c2078/Heat_stress_analysis/xpore/A57.asm.bp.p_ctg.fa\
-r /ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_25Rep1/fastq_pass/combined_25rep1.fastq,/ibex/scratch/projects/c2078/Villegmb
/20230913_P4U2_2/20230913_P4U2_25rep2/fastq_pass/combined_25rep2.fastq,/ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_25rep3/fa
stq_pass/combined_25rep3.fastq,/ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_34Rep1/fastq_pass/combined_34rep1.fastq,/ibex/scr
atch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_34rep2/fastq_pass/combined_34rep2.fastq, /ibex/scratch/projects/c2078/Villegmb/20230913_P
4U2_2/20230913_P4U2_34rep3/fastq_pass/combined_34rep3.fastq \
--threads 24

stringtie_mix _____________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J stringtie_mix
#SBATCH -o /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/stringtie_mix.%J.out
#SBATCH -e /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/stringtie_mix.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

stringtie illumina_alignment.bam flair.aligned.bam --mix -p 24 -o /ibex/scratch/projects/c2078/transcriptome_assembly/Ahem_transcriptome.gtf

_____________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcriptome_fasta
#SBATCH -o /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/ transcriptome_fasta.%J.out
#SBATCH -e /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/ transcriptome_fasta.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

./gffread/gffread -w Ahem_transcripts.fa -g /ibex/tmp/c2078/Heat_stress_analysis/xpore/A57.asm.bp.p_ctg.fa /ibex/scratch/projects/c2078/transcriptome_assembly/Ahem_transcriptome.gtf

_____________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J BUSCO_transcriptome_stringtie
#SBATCH -o BUSCO_transcriptome_stringtie.%J.out
#SBATCH -e BUSCO_transcriptome_stringtie.%J.err
#SBATCH --time=20:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

export BUSCO_CONFIG_FILE="/path/to/myconfig.ini"
busco -i Ahem_transcripts.fa -l metazoa_odb10 -o transcriptome_stringtie -m tran -f

sed '/>/!s/U/T/g' /ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/Ahem_transcript_rename.fasta > /ibex/scratch/pro
jects/c2078/Villegmb/20230913_P4U2_2/Ahem_transcript_DNA.fasta

export BUSCO_CONFIG_FILE="/path/to/myconfig.ini"

busco -i /ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/Ahem_transcript_DNA.fasta -l metazoa_odb10 -o transcripto
me_AHEM -m tran -f -c 24
/ibex/tmp/c2078/Heat_stress_analysis/scripts/transcripts_without_predicted_proteins.tsv

/ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep

_____________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J longest_orfs.cds_names 
#SBATCH -o longest_orfs.cds_names.%J.out
#SBATCH -e longest_orfs.cds_names.%J.err
#SBATCH --time=20:30:00
#SBATCH --mem=100G
#SBATCH --cpus-per-task=24

# Extract lines starting with ">" from the input file and save them to a new file
grep "^>" /ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.cds | awk -F " " '{print $1}' > longest_orfs.cds_names.txt

then I used R to confirm.

_____________________________________________________

Now. I am going to reduce the long proteins PEP file from the transcoder "longest PEP to do the blasts EMBBL Y NR.

/ibex/tmp/c2078/Heat_stress_analysis/scripts/transcripts_without_predicted_proteins.tsv

/ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep


Step 1: extract the long open reading frames

_________________________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcoder_orf
#SBATCH -o /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_orf.%J.out
#SBATCH -e /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_orf.%J.err
#SBATCH --time=150:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24
d

TransDecoder.LongOrfs -t Ahem_transcripts_with_reference.fa

Use file: /ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep  for Pfam and/or BlastP searches to enable homology-based coding region identification.

Then, run TransDecoder.Predict for your final coding region predictions.

Step 2: Identify ORFs with homology 

Optional - blast or pfam searches.

_________________________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcoder_blast
#SBATCH -o /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_blast.%J.out
#SBATCH -e /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_blast.%J.err
#SBATCH --time=150:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

blastp -query /ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep \
-db trembl -max_target_seqs 20 \
-outfmt 6 -evalue 1e-5 -num_threads 24 > blastp.outfmt6_trembl

_________________________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcoder_blastp_nr
#SBATCH -o transcoder_blastp_nr.%J.out
#SBATCH -e transcoder_blastp_nr.%J.err
#SBATCH --time=150:30:00
#SBATCH --mem=200G
#SBATCH --cpus-per-task=50

blastp -query /ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep \
-db nr -max_target_seqs 20 \
-outfmt 6 -evalue 1e-5 -num_threads 50 > blastp.outfmt6_nr


PFAM ____________________________________________________________

ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz

gunzip Pfam-A.hmm.gz

hmmpress Pfam-A.hmm

Pfam Search______________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcoder_hmmer
#SBATCH -o /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_hmmer.%J.out
#SBATCH -e /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_hmmer.%J.err
#SBATCH --time=150:30:00
#SBATCH --mem=500G
#SBATCH --cpus-per-task=24

export HMMERDB=/ibex/tmp/c2078/Heat_stress_analysis/scripts/Pfam-A.hmm

#module load hmmer

hmmsearch --cpu 24 -E 1e-10 --domtblout pfam.domtblout $HMMERDB /ibex/tmp/c2078/Heat_stress_analysis/scripts/Ahem_transcripts_with_reference.fa.transdecoder_dir/longest_orfs.pep

(base) [villegmb@login509-02-r scripts]$ more blast_trembl_1.sh
#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J blast_trembl_1
#SBATCH -o blast_trembl_1.%J.out
#SBATCH -e blast_trembl_1.%J.err
#SBATCH --time=150:30:00
#SBATCH --mem=256G
#SBATCH --cpus-per-task=50

blastp -query /ibex/tmp/c2078/Heat_stress_analysis/scripts/long_proteins_split/output_1.fasta -db trembl -max_target_seqs 20 -outfmt 6 -evalue 1e-5 -num_threads 50 >
/ibex/tmp/c2078/Heat_stress_analysis/scripts/blast_trembl/blastp.outfmt6_trembl_1

Step 3: predict the likely coding regions

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcoder_predict
#SBATCH -o /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_predict.%J.out
#SBATCH -e /ibex/tmp/c2078/Heat_stress_analysis/scripts/transcoder_predict.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=100G
#SBATCH --cpus-per-task=24

TransDecoder.Predict -t Ahem_transcripts_with_reference.fa --retain_pfam_hits pfam.domtblout --retain_blastp_hits blastp.outfmt6

RESULT __________________________________________________________

The final set of candidate coding regions can be found as files '.transdecoder.' where extensions include .pep, .cds, .gff3, and .bed

KOFAM __________________________________________________________

hmmer/3.3.2
parallel is already in IBEX. Los amo. Nunca cambien


-----------------------------------------------------------------

INTERPROSCSOM

InterProScan:

Run InterProScan on your sequences. InterProScan integrates multiple domain prediction methods and databases, including Pfam, SMART, PRINTS, and others. It provides a comprehensive analysis of protein families, domains, and functional sites.

bash

interproscan.sh -i your_sequences.fasta -f tsv

The output from InterProScan includes information about protein domains, families, and functional sites predicted for each input sequence.

Annotation Integration:

Integrate the results from BLASTp, Pfam, and InterProScan into a unified annotation dataset. This consolidation ensures a comprehensive view of the functional elements present in your sequences.

Functional Enrichment Analysis:

Perform functional enrichment analysis to identify overrepresented Gene Ontology (GO) terms or other functional categories within your dataset. This step helps uncover biological themes and enrichments.
Data Visualization and Interpretation:

Visualize the annotation results using heatmaps, bar charts, or network diagrams. Interpret the findings in the context of your research question and gain insights into the functional characteristics of your sequences.
By incorporating InterProScan into your annotation pipeline, you enhance the functional characterization of your sequences by considering a broader range of protein families and domains beyond individual Pfam domains.

interproscan.sh -i your_input.fasta -o output_directory -f tsv

___________________________________________________________________________

#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J count_proteins
#SBATCH -o count_proteins.%J.out
#SBATCH -e count_proteins.%J.err
#SBATCH --time=50:30:00
#SBATCH --mem=100G
#SBATCH --cpus-per-task=24

# Load any necessary modules or activate conda environments if needed

# Add your commands here

# Count the lines starting with ">" and output the count to count_proteins.%J.out

count=$(grep -c "^>" Ahem_transcripts_with_reference.fa )
echo "The number of transcripts is $count" >> count_proteins.$SLURM_JOB_ID.out

# Create a new file with lines starting with ">"
grep "^>" Ahem_transcripts_with_reference.fa > transcripts_names_in_Ahem_transcripts_with_reference.fasta

# Additional commands if needed

# Count the lines starting with ">" and output the count to count_proteins.%J.out

count=$(grep -c "^>" Ahem_transcripts_with_reference.fa.transdecoder.pep)
echo "The number of proteins is $count" >> count_proteins.$SLURM_JOB_ID.out

# Create a new file with lines starting with ">"
grep "^>" Ahem_transcripts_with_reference.fa.transdecoder.pep > transcripts_names_in_Ahem_transcripts_with_reference.fa.transdecoder.pep.fasta

# Additional commands if needed


# Additional commands if needed

# Count the lines starting with ">" and output the count to count_proteins.%J.out

count=$(grep -c "^>" Ahem_transcripts_with_reference.fa.transdecoder.pep)
echo "The number of proteins is $count" >> count_proteins.$SLURM_JOB_ID.out

# Create a new file with lines starting with ">"
grep "^>" Ahem_transcripts_with_reference.fa.transdecoder.pep > transcripts_names_in_Ahem_transcripts_with_reference.fa.transdecoder.pep.fasta

# Additional commands if needed

https://github.com/lyijin/annotating_proteomes/blob/master/README.rst


(base) [villegmb@login509-02-r scripts]$ more transcriptome_symbiont_25rep1.sh
#!/bin/bash --login
#SBATCH -N 1
#SBATCH --partition=batch
#SBATCH -J transcriptome_symbiont_25rep1
#SBATCH -o /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/transcriptom
e_symbiont_25rep1.%J.out
#SBATCH -e /ibex/scratch/projects/c2078/Heat_stress_analysis/scripts/transcriptom
e_symbiont_25rep1.%J.err
#SBATCH --time=20:30:00
#SBATCH --mem=100G
#SBATCH --cpus-per-task=24

seqtk seq -a /ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_
25Rep1/fastq_pass/combined_25rep1.fastq > /ibex/scratch/projects/c2078/Villegmb/2
0230913_P4U2_2/20230913_P4U2_25Rep1/fastq_pass/combined_25rep1_FASTA.fasta

sed '/>/!s/U/T/g; s/\(>.*\) .*/\1/' /ibex/scratch/projects/c2078/Villegmb/2023091
3_P4U2_2/20230913_P4U2_25Rep1/fastq_pass/combined_25rep1_FASTA.fasta > /ibex/scra
tch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_25Rep1/fastq_pass/DNA_F
ASTA.fasta

export BUSCO_CONFIG_FILE="/path/to/myconfig.ini"

busco -i /ibex/scratch/projects/c2078/Villegmb/20230913_P4U2_2/20230913_P4U2_25Re
p1/fastq_pass/DNA_FASTA.fasta -l alveolata_odb10 -o transcriptome_symbiont_25rep1
 -m tran -f -c 24


